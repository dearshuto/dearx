#usda 1.0
(
    doc = "Blender v3.4.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Cube"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "Cube"
    {
        uniform bool doubleSided = 1
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [4, 2, 0, 2, 7, 3, 6, 5, 7, 1, 7, 5, 0, 3, 1, 4, 1, 5, 4, 6, 2, 2, 6, 7, 6, 4, 5, 1, 3, 7, 0, 2, 3, 4, 0, 1]
        rel material:binding = </_materials/Material>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(1, 1, 1), (1, 1, -1), (1, -1, 1), (1, -1, -1), (-1, 1, 1), (-1, 1, -1), (-1, -1, 1), (-1, -1, -1)]
        texCoord2f[] primvars:UVMap = [(0.875, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.75), (0.375, 1), (0.375, 0.75), (0.625, 0), (0.375, 0.25), (0.375, 0), (0.375, 0.5), (0.125, 0.75), (0.125, 0.5), (0.625, 0.5), (0.375, 0.75), (0.375, 0.5), (0.625, 0.25), (0.375, 0.5), (0.375, 0.25), (0.875, 0.5), (0.875, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.375, 0.5), (0.375, 0.75), (0.125, 0.75), (0.625, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}